<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjlp.face.file.mapper.FileOperateFailedRecordMapper" >
  <resultMap id="BaseResultMap" type="com.zjlp.face.file.domain.FileOperateFailedRecord" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="FILE_NO" property="fileNo" jdbcType="VARCHAR" />
    <result column="FILE_TYPE" property="fileType" jdbcType="VARCHAR" />
    <result column="OPERATE" property="operate" jdbcType="INTEGER" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, FILE_NO, FILE_TYPE, OPERATE, STATUS, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from file_operate_failed_record
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from file_operate_failed_record
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zjlp.face.file.domain.FileOperateFailedRecord" >
    insert into file_operate_failed_record (ID, FILE_NO, FILE_TYPE, 
      OPERATE, STATUS, CREATE_TIME, 
      UPDATE_TIME)
    values (#{id,jdbcType=BIGINT}, #{fileNo,jdbcType=VARCHAR}, #{fileType,jdbcType=VARCHAR}, 
      #{operate,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zjlp.face.file.domain.FileOperateFailedRecord" >
    insert into file_operate_failed_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="fileNo != null" >
        FILE_NO,
      </if>
      <if test="fileType != null" >
        FILE_TYPE,
      </if>
      <if test="operate != null" >
        OPERATE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fileNo != null" >
        #{fileNo,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="operate != null" >
        #{operate,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjlp.face.file.domain.FileOperateFailedRecord" >
    update file_operate_failed_record
    <set >
      <if test="fileNo != null" >
        FILE_NO = #{fileNo,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        FILE_TYPE = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="operate != null" >
        OPERATE = #{operate,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjlp.face.file.domain.FileOperateFailedRecord" >
    update file_operate_failed_record
    set FILE_NO = #{fileNo,jdbcType=VARCHAR},
      FILE_TYPE = #{fileType,jdbcType=VARCHAR},
      OPERATE = #{operate,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>